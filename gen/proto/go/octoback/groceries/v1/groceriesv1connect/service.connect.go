// Code generated by protoc-gen-connect-go. DO NOT EDIT.
//
// Source: octoback/groceries/v1/service.proto

package groceriesv1connect

import (
	connect "connectrpc.com/connect"
	context "context"
	errors "errors"
	v1 "github.com/kiliandbigblue/octoback/gen/proto/go/octoback/groceries/v1"
	http "net/http"
	strings "strings"
)

// This is a compile-time assertion to ensure that this generated file and the connect package are
// compatible. If you get a compiler error that this constant is not defined, this code was
// generated with a version of connect newer than the one compiled into your binary. You can fix the
// problem by either regenerating this code with an older version of connect or updating the connect
// version compiled into your binary.
const _ = connect.IsAtLeastVersion1_13_0

const (
	// ServiceName is the fully-qualified name of the Service service.
	ServiceName = "octoback.groceries.v1.Service"
)

// These constants are the fully-qualified names of the RPCs defined in this package. They're
// exposed at runtime as Spec.Procedure and as the final two segments of the HTTP route.
//
// Note that these are different from the fully-qualified method names used by
// google.golang.org/protobuf/reflect/protoreflect. To convert from these constants to
// reflection-formatted method names, remove the leading slash and convert the remaining slash to a
// period.
const (
	// ServiceGetGroceryListProcedure is the fully-qualified name of the Service's GetGroceryList RPC.
	ServiceGetGroceryListProcedure = "/octoback.groceries.v1.Service/GetGroceryList"
	// ServiceCreateGroceryListProcedure is the fully-qualified name of the Service's CreateGroceryList
	// RPC.
	ServiceCreateGroceryListProcedure = "/octoback.groceries.v1.Service/CreateGroceryList"
	// ServiceUpdateGroceryListProcedure is the fully-qualified name of the Service's UpdateGroceryList
	// RPC.
	ServiceUpdateGroceryListProcedure = "/octoback.groceries.v1.Service/UpdateGroceryList"
	// ServiceListGroceryListsProcedure is the fully-qualified name of the Service's ListGroceryLists
	// RPC.
	ServiceListGroceryListsProcedure = "/octoback.groceries.v1.Service/ListGroceryLists"
	// ServiceDeleteGroceryListProcedure is the fully-qualified name of the Service's DeleteGroceryList
	// RPC.
	ServiceDeleteGroceryListProcedure = "/octoback.groceries.v1.Service/DeleteGroceryList"
	// ServiceCreateGroceryItemProcedure is the fully-qualified name of the Service's CreateGroceryItem
	// RPC.
	ServiceCreateGroceryItemProcedure = "/octoback.groceries.v1.Service/CreateGroceryItem"
)

// These variables are the protoreflect.Descriptor objects for the RPCs defined in this package.
var (
	serviceServiceDescriptor                 = v1.File_octoback_groceries_v1_service_proto.Services().ByName("Service")
	serviceGetGroceryListMethodDescriptor    = serviceServiceDescriptor.Methods().ByName("GetGroceryList")
	serviceCreateGroceryListMethodDescriptor = serviceServiceDescriptor.Methods().ByName("CreateGroceryList")
	serviceUpdateGroceryListMethodDescriptor = serviceServiceDescriptor.Methods().ByName("UpdateGroceryList")
	serviceListGroceryListsMethodDescriptor  = serviceServiceDescriptor.Methods().ByName("ListGroceryLists")
	serviceDeleteGroceryListMethodDescriptor = serviceServiceDescriptor.Methods().ByName("DeleteGroceryList")
	serviceCreateGroceryItemMethodDescriptor = serviceServiceDescriptor.Methods().ByName("CreateGroceryItem")
)

// ServiceClient is a client for the octoback.groceries.v1.Service service.
type ServiceClient interface {
	// Get the grocery list.
	GetGroceryList(context.Context, *connect.Request[v1.GetGroceryListRequest]) (*connect.Response[v1.GetGroceryListResponse], error)
	// Create a grocery list
	CreateGroceryList(context.Context, *connect.Request[v1.CreateGroceryListRequest]) (*connect.Response[v1.CreateGroceryListResponse], error)
	// Update a grocery list
	UpdateGroceryList(context.Context, *connect.Request[v1.UpdateGroceryListRequest]) (*connect.Response[v1.UpdateGroceryListResponse], error)
	// List grocery lists
	ListGroceryLists(context.Context, *connect.Request[v1.ListGroceryListsRequest]) (*connect.Response[v1.ListGroceryListsResponse], error)
	// Delete a grocery list
	DeleteGroceryList(context.Context, *connect.Request[v1.DeleteGroceryListRequest]) (*connect.Response[v1.DeleteGroceryListResponse], error)
	// Create a grocery item
	CreateGroceryItem(context.Context, *connect.Request[v1.CreateGroceryItemRequest]) (*connect.Response[v1.CreateGroceryItemResponse], error)
}

// NewServiceClient constructs a client for the octoback.groceries.v1.Service service. By default,
// it uses the Connect protocol with the binary Protobuf Codec, asks for gzipped responses, and
// sends uncompressed requests. To use the gRPC or gRPC-Web protocols, supply the connect.WithGRPC()
// or connect.WithGRPCWeb() options.
//
// The URL supplied here should be the base URL for the Connect or gRPC server (for example,
// http://api.acme.com or https://acme.com/grpc).
func NewServiceClient(httpClient connect.HTTPClient, baseURL string, opts ...connect.ClientOption) ServiceClient {
	baseURL = strings.TrimRight(baseURL, "/")
	return &serviceClient{
		getGroceryList: connect.NewClient[v1.GetGroceryListRequest, v1.GetGroceryListResponse](
			httpClient,
			baseURL+ServiceGetGroceryListProcedure,
			connect.WithSchema(serviceGetGroceryListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		createGroceryList: connect.NewClient[v1.CreateGroceryListRequest, v1.CreateGroceryListResponse](
			httpClient,
			baseURL+ServiceCreateGroceryListProcedure,
			connect.WithSchema(serviceCreateGroceryListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		updateGroceryList: connect.NewClient[v1.UpdateGroceryListRequest, v1.UpdateGroceryListResponse](
			httpClient,
			baseURL+ServiceUpdateGroceryListProcedure,
			connect.WithSchema(serviceUpdateGroceryListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		listGroceryLists: connect.NewClient[v1.ListGroceryListsRequest, v1.ListGroceryListsResponse](
			httpClient,
			baseURL+ServiceListGroceryListsProcedure,
			connect.WithSchema(serviceListGroceryListsMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		deleteGroceryList: connect.NewClient[v1.DeleteGroceryListRequest, v1.DeleteGroceryListResponse](
			httpClient,
			baseURL+ServiceDeleteGroceryListProcedure,
			connect.WithSchema(serviceDeleteGroceryListMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
		createGroceryItem: connect.NewClient[v1.CreateGroceryItemRequest, v1.CreateGroceryItemResponse](
			httpClient,
			baseURL+ServiceCreateGroceryItemProcedure,
			connect.WithSchema(serviceCreateGroceryItemMethodDescriptor),
			connect.WithClientOptions(opts...),
		),
	}
}

// serviceClient implements ServiceClient.
type serviceClient struct {
	getGroceryList    *connect.Client[v1.GetGroceryListRequest, v1.GetGroceryListResponse]
	createGroceryList *connect.Client[v1.CreateGroceryListRequest, v1.CreateGroceryListResponse]
	updateGroceryList *connect.Client[v1.UpdateGroceryListRequest, v1.UpdateGroceryListResponse]
	listGroceryLists  *connect.Client[v1.ListGroceryListsRequest, v1.ListGroceryListsResponse]
	deleteGroceryList *connect.Client[v1.DeleteGroceryListRequest, v1.DeleteGroceryListResponse]
	createGroceryItem *connect.Client[v1.CreateGroceryItemRequest, v1.CreateGroceryItemResponse]
}

// GetGroceryList calls octoback.groceries.v1.Service.GetGroceryList.
func (c *serviceClient) GetGroceryList(ctx context.Context, req *connect.Request[v1.GetGroceryListRequest]) (*connect.Response[v1.GetGroceryListResponse], error) {
	return c.getGroceryList.CallUnary(ctx, req)
}

// CreateGroceryList calls octoback.groceries.v1.Service.CreateGroceryList.
func (c *serviceClient) CreateGroceryList(ctx context.Context, req *connect.Request[v1.CreateGroceryListRequest]) (*connect.Response[v1.CreateGroceryListResponse], error) {
	return c.createGroceryList.CallUnary(ctx, req)
}

// UpdateGroceryList calls octoback.groceries.v1.Service.UpdateGroceryList.
func (c *serviceClient) UpdateGroceryList(ctx context.Context, req *connect.Request[v1.UpdateGroceryListRequest]) (*connect.Response[v1.UpdateGroceryListResponse], error) {
	return c.updateGroceryList.CallUnary(ctx, req)
}

// ListGroceryLists calls octoback.groceries.v1.Service.ListGroceryLists.
func (c *serviceClient) ListGroceryLists(ctx context.Context, req *connect.Request[v1.ListGroceryListsRequest]) (*connect.Response[v1.ListGroceryListsResponse], error) {
	return c.listGroceryLists.CallUnary(ctx, req)
}

// DeleteGroceryList calls octoback.groceries.v1.Service.DeleteGroceryList.
func (c *serviceClient) DeleteGroceryList(ctx context.Context, req *connect.Request[v1.DeleteGroceryListRequest]) (*connect.Response[v1.DeleteGroceryListResponse], error) {
	return c.deleteGroceryList.CallUnary(ctx, req)
}

// CreateGroceryItem calls octoback.groceries.v1.Service.CreateGroceryItem.
func (c *serviceClient) CreateGroceryItem(ctx context.Context, req *connect.Request[v1.CreateGroceryItemRequest]) (*connect.Response[v1.CreateGroceryItemResponse], error) {
	return c.createGroceryItem.CallUnary(ctx, req)
}

// ServiceHandler is an implementation of the octoback.groceries.v1.Service service.
type ServiceHandler interface {
	// Get the grocery list.
	GetGroceryList(context.Context, *connect.Request[v1.GetGroceryListRequest]) (*connect.Response[v1.GetGroceryListResponse], error)
	// Create a grocery list
	CreateGroceryList(context.Context, *connect.Request[v1.CreateGroceryListRequest]) (*connect.Response[v1.CreateGroceryListResponse], error)
	// Update a grocery list
	UpdateGroceryList(context.Context, *connect.Request[v1.UpdateGroceryListRequest]) (*connect.Response[v1.UpdateGroceryListResponse], error)
	// List grocery lists
	ListGroceryLists(context.Context, *connect.Request[v1.ListGroceryListsRequest]) (*connect.Response[v1.ListGroceryListsResponse], error)
	// Delete a grocery list
	DeleteGroceryList(context.Context, *connect.Request[v1.DeleteGroceryListRequest]) (*connect.Response[v1.DeleteGroceryListResponse], error)
	// Create a grocery item
	CreateGroceryItem(context.Context, *connect.Request[v1.CreateGroceryItemRequest]) (*connect.Response[v1.CreateGroceryItemResponse], error)
}

// NewServiceHandler builds an HTTP handler from the service implementation. It returns the path on
// which to mount the handler and the handler itself.
//
// By default, handlers support the Connect, gRPC, and gRPC-Web protocols with the binary Protobuf
// and JSON codecs. They also support gzip compression.
func NewServiceHandler(svc ServiceHandler, opts ...connect.HandlerOption) (string, http.Handler) {
	serviceGetGroceryListHandler := connect.NewUnaryHandler(
		ServiceGetGroceryListProcedure,
		svc.GetGroceryList,
		connect.WithSchema(serviceGetGroceryListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	serviceCreateGroceryListHandler := connect.NewUnaryHandler(
		ServiceCreateGroceryListProcedure,
		svc.CreateGroceryList,
		connect.WithSchema(serviceCreateGroceryListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	serviceUpdateGroceryListHandler := connect.NewUnaryHandler(
		ServiceUpdateGroceryListProcedure,
		svc.UpdateGroceryList,
		connect.WithSchema(serviceUpdateGroceryListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	serviceListGroceryListsHandler := connect.NewUnaryHandler(
		ServiceListGroceryListsProcedure,
		svc.ListGroceryLists,
		connect.WithSchema(serviceListGroceryListsMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	serviceDeleteGroceryListHandler := connect.NewUnaryHandler(
		ServiceDeleteGroceryListProcedure,
		svc.DeleteGroceryList,
		connect.WithSchema(serviceDeleteGroceryListMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	serviceCreateGroceryItemHandler := connect.NewUnaryHandler(
		ServiceCreateGroceryItemProcedure,
		svc.CreateGroceryItem,
		connect.WithSchema(serviceCreateGroceryItemMethodDescriptor),
		connect.WithHandlerOptions(opts...),
	)
	return "/octoback.groceries.v1.Service/", http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		switch r.URL.Path {
		case ServiceGetGroceryListProcedure:
			serviceGetGroceryListHandler.ServeHTTP(w, r)
		case ServiceCreateGroceryListProcedure:
			serviceCreateGroceryListHandler.ServeHTTP(w, r)
		case ServiceUpdateGroceryListProcedure:
			serviceUpdateGroceryListHandler.ServeHTTP(w, r)
		case ServiceListGroceryListsProcedure:
			serviceListGroceryListsHandler.ServeHTTP(w, r)
		case ServiceDeleteGroceryListProcedure:
			serviceDeleteGroceryListHandler.ServeHTTP(w, r)
		case ServiceCreateGroceryItemProcedure:
			serviceCreateGroceryItemHandler.ServeHTTP(w, r)
		default:
			http.NotFound(w, r)
		}
	})
}

// UnimplementedServiceHandler returns CodeUnimplemented from all methods.
type UnimplementedServiceHandler struct{}

func (UnimplementedServiceHandler) GetGroceryList(context.Context, *connect.Request[v1.GetGroceryListRequest]) (*connect.Response[v1.GetGroceryListResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("octoback.groceries.v1.Service.GetGroceryList is not implemented"))
}

func (UnimplementedServiceHandler) CreateGroceryList(context.Context, *connect.Request[v1.CreateGroceryListRequest]) (*connect.Response[v1.CreateGroceryListResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("octoback.groceries.v1.Service.CreateGroceryList is not implemented"))
}

func (UnimplementedServiceHandler) UpdateGroceryList(context.Context, *connect.Request[v1.UpdateGroceryListRequest]) (*connect.Response[v1.UpdateGroceryListResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("octoback.groceries.v1.Service.UpdateGroceryList is not implemented"))
}

func (UnimplementedServiceHandler) ListGroceryLists(context.Context, *connect.Request[v1.ListGroceryListsRequest]) (*connect.Response[v1.ListGroceryListsResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("octoback.groceries.v1.Service.ListGroceryLists is not implemented"))
}

func (UnimplementedServiceHandler) DeleteGroceryList(context.Context, *connect.Request[v1.DeleteGroceryListRequest]) (*connect.Response[v1.DeleteGroceryListResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("octoback.groceries.v1.Service.DeleteGroceryList is not implemented"))
}

func (UnimplementedServiceHandler) CreateGroceryItem(context.Context, *connect.Request[v1.CreateGroceryItemRequest]) (*connect.Response[v1.CreateGroceryItemResponse], error) {
	return nil, connect.NewError(connect.CodeUnimplemented, errors.New("octoback.groceries.v1.Service.CreateGroceryItem is not implemented"))
}
